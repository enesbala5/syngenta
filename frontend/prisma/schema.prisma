generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(uuid())

  firstName String?
  lastName  String?

  profilePicture String? // Not using for right now - but may implement in the future

  email          String  @unique
  emailConfirmed Boolean @default(false)

  password String?

  username String?   @unique
  sessions Session[]

  // OAUTH
  provider AuthProvider

  githubId String? @unique
  googleId String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  coverLetters CoverLetter[]
}

enum AuthProvider {
  Email
  Github
  Google
  Meta
}

model CoverLetter {
  id String @id @default(uuid())

  title String // We should generate this using AI - based on the Job Position

  content String
  // request Request

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([authorId])
}

// model Request {

// }

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@index([userId])
}

// Email Subscriptions

model EmailSubscription {
  id        String   @id @default(uuid()) /// Post ID
  createdAt DateTime @default(now()) /// Created At

  email String @unique
}
